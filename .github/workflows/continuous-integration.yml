name: Continuous Integration

on:
    pull_request:
    push:
        branches:
            - main

env:
    NODE_VERSION: 16
    CI: true

jobs:
    unit-tests:
        runs-on: ubuntu-latest
        timeout-minutes: 20

        steps:
            - name: Checkout current commit
              uses: actions/checkout@v3

            - name: Use Node.js ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"
                  cache-dependency-path: "**/package-lock.json"

            - name: Install NPM dependencies
              run: npm ci
              env:
                  CYPRESS_INSTALL_BINARY: 0

            - name: Install NPM dependencies from packages
              run: npm run bootstrap
              env:
                  CYPRESS_INSTALL_BINARY: 0

            - name: Typecheck files
              run: npm run typecheck

            - name: Lint files (JS/TS & CSS)
              run: npm run lint

            - name: Unit Tests
              run: npm run test:unit

    component-tests:
        runs-on: ubuntu-latest

        strategy:
            # when one test fails, do not cancel the other
            # containers, because this will kill Cypress processes
            # leaving the Dashboard hanging ...
            # https://github.com/cypress-io/github-action/issues/48
            fail-fast: false
            matrix:
                containers: ["worker bee 1", "worker bee 2", "worker bee 3"]

        steps:
            - name: Checkout current commit
              uses: actions/checkout@v3

            - name: Use Node.js ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: "npm"
                  cache-dependency-path: "**/package-lock.json"

            - name: Install NPM dependencies
              run: npm ci

            - name: Install NPM dependencies from packages
              run: npm run bootstrap
              env:
                  CYPRESS_INSTALL_BINARY: 0

            - name: Component Tests
              run: npx cypress run-ct --record --key=${{ secrets.CYPRESS_RECORD_KEY }} --browser chrome --group component-tests --tag component-tests --parallel
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
