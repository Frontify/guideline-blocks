name: Continuous Integration

on:
    pull_request:
    push:
        branches:
            - main

env:
    NODE_VERSION: 16
    CI: true
    NUMBER_OF_RUNNERS: 6

jobs:
    linting:
        runs-on: ubuntu-latest
        timeout-minutes: 10

        steps:
            - name: Checkout current commit
              uses: actions/checkout@v3

            - name: Use Node.js ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Use pnpm
              uses: pnpm/action-setup@v2.2.1
              with:
                  version: latest
                  run_install: false

            - name: Get pnpm store directory
              id: pnpm-cache
              run: echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: |
                      ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
                      ~/.cache/Cypress
                  key: pnpm-with-cypress-${{ runner.os }}-v1-${{ hashFiles('pnpm-lock.yaml') }}
                  restore-keys: pnpm-with-cypress-${{ runner.os }}-v1-

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Lint files (JS/TS & CSS)
              run: pnpm run lint

    typecheck:
        runs-on: ubuntu-latest
        timeout-minutes: 10

        steps:
            - name: Checkout current commit
              uses: actions/checkout@v3

            - name: Use Node.js ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Use pnpm
              uses: pnpm/action-setup@v2.2.1
              with:
                  version: latest
                  run_install: false

            - name: Get pnpm store directory
              id: pnpm-cache
              run: echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: |
                      ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
                      ~/.cache/Cypress
                  key: pnpm-with-cypress-${{ runner.os }}-v1-${{ hashFiles('pnpm-lock.yaml') }}
                  restore-keys: pnpm-with-cypress-${{ runner.os }}-v1-

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build packages
              run: pnpm run build

            - name: Typecheck files
              run: pnpm run typecheck

    unit-tests:
        runs-on: ubuntu-latest
        timeout-minutes: 10

        steps:
            - name: Checkout current commit
              uses: actions/checkout@v3

            - name: Use Node.js ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Use pnpm
              uses: pnpm/action-setup@v2.2.1
              with:
                  version: latest
                  run_install: false

            - name: Get pnpm store directory
              id: pnpm-cache
              run: echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: |
                      ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
                      ~/.cache/Cypress
                  key: pnpm-with-cypress-${{ runner.os }}-v1-${{ hashFiles('pnpm-lock.yaml') }}
                  restore-keys: pnpm-with-cypress-${{ runner.os }}-v1-

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Unit Tests
              run: pnpm run test:unit

    prepare-tests:
        runs-on: ubuntu-latest
        timeout-minutes: 5

        outputs:
            component-tests: ${{ steps.parse-specs.outputs.component-tests }}

        steps:
            - name: Checkout default branch
              uses: actions/checkout@v3

            - name: Parse test files for parallelization
              id: parse-specs
              uses: tgamauf/cypress-parallel@v1
              with:
                  count-runners: ${{ env.NUMBER_OF_RUNNERS }}

    component-tests:
        runs-on: ubuntu-latest
        timeout-minutes: 10

        needs: [prepare-tests]

        strategy:
            fail-fast: false
            matrix:
                spec: ${{ fromJson(needs.prepare-tests.outputs.component-tests) }}

        steps:
            - name: Checkout current commit
              uses: actions/checkout@v3

            - name: Use Node.js ${{ env.NODE_VERSION }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}

            - name: Use pnpm
              uses: pnpm/action-setup@v2.2.1
              with:
                  version: latest
                  run_install: false

            - name: Get pnpm store directory
              id: pnpm-cache
              run: echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: |
                      ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
                      ~/.cache/Cypress
                  key: pnpm-with-cypress-${{ runner.os }}-v1-${{ hashFiles('pnpm-lock.yaml') }}
                  restore-keys: pnpm-with-cypress-${{ runner.os }}-v1-

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build packages
              run: pnpm run build

            - name: Component Tests
              run: pnpm run test:components --spec ${{ matrix.spec }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
