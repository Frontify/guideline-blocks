const AltTextInput = '[data-test-id="alt-text-input"]';
// SECTION: interaction with the item
// the update image alt text
it.only('it should update alt text by updating alt text with the flyout', () => {
    const [ThumbnailGridBlockWithStubs] = withAppBridgeBlockStubs(ThumbnailGridBlock, {
        editorState: true,
        blockSettings: {
            ...defaultSettings,
            items: [
                {
                    id: '1',
                    title: 'Title 1',
                    description: 'Test Description 1',
                    image: '1',
                    altText: 'A custom alt text',
                },
            ],
        },
        blockAssets: {
            ['1']: [AssetDummy.with(1)],
        },
    });
    mount(
        <div className="tw-mt-12">
            <ThumbnailGridBlockWithStubs />
        </div>
    );
    cy.get(ThumbnailImage)
        .first()
        .should('have.attr', 'alt', 'A custom alt text')
        .should('have.attr', 'src', 'https://generic.url');
    cy.get(`${BlockItemWrapperToolbar}>div>div`).eq(2).get('button').first().click();
    cy.get(AltTextInput).click().type('Test Alt Text{enter}');
    // cy.get(ThumbnailImageAltText).type('Test Alt Text');
});
// can be draggable

// is should add an item by adding an image
// it should be able to add multiple images by upload
// it should be able to add multiple images by asset chooser
// it should be able to add multiple images by droping them in the placeholder

// ADD to BlockItemWrapper tests?
// invalid image should not be added and displays an error message

it.only('should render the grab handle if more than 1 item', () => {
    const [ThumbnailGridBlockWithStubs] = withAppBridgeBlockStubs(ThumbnailGridBlock, {
        editorState: true,
        blockSettings: {
            ...defaultSettings,
            items: [
                {
                    id: '1',
                    title: 'Title 1',
                    description: 'Test Description 1',
                    image: '1',
                },
                {
                    id: '2',
                    title: 'Title 2',
                    description: 'Test Description 2',
                    image: '2',
                },
                {
                    id: '3',
                    title: 'Title 3',
                    description: 'Test Description 3',
                    image: '3',
                },
            ],
        },
        blockAssets: {
            ['1']: [AssetDummy.with(1)],
            ['2']: [AssetDummy.with(2)],
            ['3']: [AssetDummy.with(3)],
        },
    });
    mount(
        <div className="tw-mt-12">
            <ThumbnailGridBlockWithStubs />
        </div>
    );
    cy.get(ThumbnailCaption).eq(1).realHover().get(`${BlockItemWrapperToolbar}>div>div`).eq(1);
});

it.only('does not show grab handle if less than 2 items', () => {
    const [ThumbnailGridBlockWithStubs] = withAppBridgeBlockStubs(ThumbnailGridBlock, {
        editorState: true,
        blockSettings: {
            ...defaultSettings,
            items: [
                {
                    id: '1',
                    title: 'Title 1',
                    description: 'Test Description 1',
                    image: '1',
                },
            ],
        },
        blockAssets: {
            ['1']: [AssetDummy.with(1)],
        },
    });
    mount(
        <div className="tw-mt-12">
            <ThumbnailGridBlockWithStubs />
        </div>
    );
    cy.get(`${BlockItemWrapperToolbar}>div>div`).eq(1).should('not.be.visible');
});
